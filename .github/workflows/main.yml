name: CI/CD Workflow

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      run: |
        docker build -t flask-app .
        docker tag flask-app:latest tushar10898/flask-app:latest
        docker push tushar10898/flask-app:latest

    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1

    - name: SSH to EC2 and deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        script: |
          echo "Checking Docker version"
          docker --version
          echo "Pulling the latest image"
          docker pull tushar10898/flask-app:latest
          echo "Stopping existing container"
          docker stop flask-app || true
          echo "Removing existing container"
          docker rm flask-app || true
          echo "Running the new container"
          docker run -d -p 80:80 --name flask-app tushar10898/flask-app:latest
          echo "Deployment finished"

    - name: Debug DNS issue
      run: |
        echo "Checking DNS resolution"
        nslookup google.com
        echo "Checking hostname resolution"
        nslookup ${{ secrets.EC2_HOST }}
